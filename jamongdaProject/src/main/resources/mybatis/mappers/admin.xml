<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.jamongda.admin.dao.AdminDAO">
 
    <resultMap type="accommodationDTO" id="accResult">
	    <result property="acc_id" column="acc_id"/>
	    <result property="acc_name" column="acc_name"/>
	    <result property="acc_type" column="acc_type"/>
	    <result property="acc_area" column="acc_area"/>
	    <result property="acc_tel" column="acc_tel"/>
	    <result property="acc_address" column="acc_address"/>
	    <result property="acc_info" column="acc_info"/>
	    <result property="email" column="email"/>
    </resultMap>
    
 	<resultMap type="accommodationImageDTO" id="accImageResult">
	 	<result property="acc_image_id" column="acc_image_id"/>
	    <result property="acc_image" column="acc_image"/>
	    <result property="acc_id" column="acc_id"/>
 	</resultMap>
    
 	<resultMap type="roomDTO" id="roResult">
	    <result property="ro_id" column="ro_id"/>
	    <result property="ro_name" column="ro_name"/>
	    <result property="ro_min" column="ro_min"/>
	    <result property="ro_max" column="ro_max"/>
	    <result property="ro_info" column="ro_info"/>
	    <result property="ro_amenities" column="ro_amenities"/>
	    <result property="ro_price" column="ro_price"/>
	    <result property="ro_checkIn" column="ro_checkIn"/>
	    <result property="ro_checkOut" column="ro_checkOut"/>
	    <result property="acc_id" column="acc_id"/>
    </resultMap>

 	<resultMap type="roomImageDTO" id="roImageResult">
	 	<result property="acc_image_id" column="acc_image_id"/>
	    <result property="acc_image" column="acc_image"/>
	    <result property="acc_id" column="acc_id"/>
 	</resultMap>
    
	<resultMap type="memberDTO" id="memResult">
		<result property="email" column="email" />
		<result property="name" column="name" />
		<result property="pwd" column="pwd" />
		<result property="tel" column="tel" />
		<result property="address" column="address" />
		<result property="birth" column="birth" />
		<result property="regNumber" column="regNumber" />
		<result property="joinDate" column="joinDate" />
		<result property="role" column="role" />
	</resultMap>
    
  	<!-- regCheck=N 인 사업자의 email 가져오기-->
  	<!--
    <select id="notRegEmail" resultType="String">
       <![CDATA[
          select email from member where regCheck='N';
       ]]>
    </select>
    -->
	<!-- regCheck=N 숙소 가져오기 -->
    <select id="selectAcc_RegN" resultMap="accResult" parameterType="String">
	    <![CDATA[
	       select acc_id, acc_name, acc_type, acc_area, acc_tel, acc_address, acc_info, email, regCheck from accommodation where regCheck='N' order by acc_id DESC;
	    ]]>
    </select> 
	<!-- regCheck=N 객실 정보 가져오기 -->
    <select id="selectRo_RegN" resultMap="roResult" parameterType="int">
	    <![CDATA[
	       select ro_id, ro_name, ro_min, ro_max, ro_info, ro_amenities, ro_price, ro_checkIn, ro_checkOut, acc_id from room where acc_id=#{acc_id} order by ro_id DESC;
	    ]]>
    </select>
    <!-- regCheck=N 숙소 이미지 파일 이름 가져오기 -->
    <select id="selectAccImages_RegN" resultMap="accImageResult" parameterType="String">
	    <![CDATA[
	        select acc_image_id, acc_image, acc_id 
	        from acc_image 
	        where acc_id in (select acc_id from accommodation where regCheck='N')
	    ]]>
    </select>
    <!-- regCheck=N 객실 이미지 파일 이름 가져오기 -->
    <select id="selectRoImages_RegN" resultMap="roImageResult" parameterType="String">
        <![CDATA[
            select ro_image_id, ro_image, ro_id 
            from room_image 
            where ro_id in (select ro_id from room where acc_id in (select acc_id from accommodation where regCheck='N'))
        ]]>
    </select>
    
    <!--숙소등록승인 (String acc_id)-->
    <update id="approveAcc" parameterType="int">
    	update accommodation set regCheck='Y', rejectReason='' where acc_id=#{acc_id}
    </update>
    <!--숙소등록거부 -->
    <update id="rejectAcc" parameterType="int">
    	update accommodation set regCheck='C' where acc_id=#{acc_id}
    </update>
    <!--숙소등록거부 사유-->
	<update id="rejectReason" parameterType="java.util.Map">
	    update accommodation set rejectReason=#{reject_reason} where acc_id=#{acc_id}
	</update>
    <!--숙소삭제하기-->
    <delete id="removeAcc" parameterType="int">
    	delete from accommodation where acc_id=#{acc_id};
    </delete>
    <!--해당 숙소의 객실 폴더 삭제하기-->
    <select id="getRo_id" parameterType="int" resultMap="roResult">
    	select ro_id from room where acc_id=#{acc_id};
    </select>
    
	<!-- regCheck=Y 숙소 가져오기 -->
    <select id="selectAcc_RegY" resultMap="accResult" parameterType="String">
	    <![CDATA[
	       select acc_id, acc_name, acc_type, acc_area, acc_tel, acc_address, acc_info, email, regCheck from accommodation where regCheck='Y' order by acc_id DESC;
	    ]]>
    </select> 
	<!-- regCheck=Y 객실 정보 가져오기 -->
    <select id="selectRo_RegY" resultMap="roResult" parameterType="int">
	    <![CDATA[
	       select ro_id, ro_name, ro_min, ro_max, ro_info, ro_amenities, ro_price, ro_checkIn, ro_checkOut, acc_id from room where acc_id=#{acc_id} order by ro_id DESC;
	    ]]>
    </select>
    <!-- regCheck=Y 숙소 이미지 파일 이름 가져오기 -->
    <select id="selectAccImages_RegY" resultMap="accImageResult" parameterType="String">
	    <![CDATA[
	        select acc_image_id, acc_image, acc_id 
	        from acc_image 
	        where acc_id in (select acc_id from accommodation where regCheck='Y')
	    ]]>
    </select>
    <!-- regCheck=Y 객실 이미지 파일 이름 가져오기 -->
    <select id="selectRoImages_RegY" resultMap="roImageResult" parameterType="String">
        <![CDATA[
            select ro_image_id, ro_image, ro_id 
            from room_image 
            where ro_id in (select ro_id from room where acc_id in (select acc_id from accommodation where regCheck='Y'))
        ]]>
    </select>
    
	<!-- 사업자 이메일 검색 및 regCheck=Y 숙소 가져오기 -->
    <select id="searchAcc_RegY" resultMap="accResult" parameterType="String">
	    <![CDATA[
	       select acc_id, acc_name, acc_type, acc_area, acc_tel, acc_address, acc_info, email, regCheck from accommodation where regCheck='Y' and email like CONCAT('%', #{searchEmail}, '%') order by acc_id DESC;
	    ]]>
    </select> 
	<!-- 사업자 이메일 검색 및 regCheck=Y 객실 정보 가져오기 -->
    <select id="searchRo_RegY" resultMap="roResult" parameterType="int">
	    <![CDATA[
	       select ro_id, ro_name, ro_min, ro_max, ro_info, ro_amenities, ro_price, ro_checkIn, ro_checkOut, acc_id from room where acc_id=#{acc_id} order by ro_id DESC;
	    ]]>
    </select>
    <!-- 사업자 이메일 검색 및 regCheck=Y 숙소 이미지 파일 이름 가져오기 -->
    <select id="searchAccImages_RegY" resultMap="accImageResult" parameterType="String">
	    <![CDATA[
	        select acc_image_id, acc_image, acc_id 
	        from acc_image 
	        where acc_id in (select acc_id from accommodation where regCheck='Y' and email like CONCAT('%', #{searchEmail}, '%'))
	    ]]>
    </select>
    <!-- 사업자 이메일 검색 및 regCheck=Y 객실 이미지 파일 이름 가져오기 -->
    <select id="searchRoImages_RegY" resultMap="roImageResult" parameterType="String">
        <![CDATA[
            select ro_image_id, ro_image, ro_id 
            from room_image 
            where ro_id in (select ro_id from room where acc_id in (select acc_id from accommodation where regCheck='Y' and email like CONCAT('%', #{searchEmail}, '%')))
        ]]>
    </select>
    
    
    
    
    
	<!-- regCheck=C 숙소 가져오기 -->
    <select id="selectAcc_RegC" resultMap="accResult" parameterType="String">
	    <![CDATA[
	       select acc_id, acc_name, acc_type, acc_area, acc_tel, acc_address, acc_info, email, regCheck from accommodation where regCheck='C' order by acc_id DESC;
	    ]]>
    </select> 
	<!-- regCheck=C 객실 정보 가져오기 -->
    <select id="selectRo_RegC" resultMap="roResult" parameterType="int">
	    <![CDATA[
	       select ro_id, ro_name, ro_min, ro_max, ro_info, ro_amenities, ro_price, ro_checkIn, ro_checkOut, acc_id from room where acc_id=#{acc_id} order by ro_id DESC;
	    ]]>
    </select>
    <!-- regCheck=C 숙소 이미지 파일 이름 가져오기 -->
    <select id="selectAccImages_RegC" resultMap="accImageResult" parameterType="String">
	    <![CDATA[
	        select acc_image_id, acc_image, acc_id 
	        from acc_image 
	        where acc_id in (select acc_id from accommodation where regCheck='C')
	    ]]>
    </select>
    <!-- regCheck=C 객실 이미지 파일 이름 가져오기 -->
    <select id="selectRoImages_RegC" resultMap="roImageResult" parameterType="String">
        <![CDATA[
            select ro_image_id, ro_image, ro_id 
            from room_image 
            where ro_id in (select ro_id from room where acc_id in (select acc_id from accommodation where regCheck='C'))
        ]]>
    </select>
    
	<!-- 회원정보 모두 가져오기(가입일자 순으로) -->
	<select id="selectAllMembersList" resultMap="memResult" >
		<![CDATA[
			select * from member order by joinDate DESC;
		]]>
	</select>
	
	<!-- 특정 회원(email)과 역할(role)의 회원정보 가져오기(검색하기)searchMembers -->
	<select id="searchMembers" parameterType="map" resultMap="memResult">
	    select * from member
	    <where>
	        <if test="searchEmail != null and searchEmail != ''">
	            email like CONCAT('%', #{searchEmail}, '%')
	        </if>
	        <if test="role != null and role != 'ALL'">
	            and role = #{role}
	        </if>
	    </where>
	    order by joinDate DESC;
	</select>
    
	<!-- 특정 회원(email)의 회원정보 가져오기(수정하기) -->
	<select id="selectMemberByEmail" parameterType="String" resultType="memberDTO">
		<![CDATA[
			select * from member where email=#{email};
		]]>
	</select>
    
	<!-- id, joinDate는 modMemberForm에서 수정불가능한 거니 update에 쓸 필요가 없음. 대신 where조건은 id를 준다. PK니까.. -->
	<!-- 회원정보수정 -->
	<update id="updateMember" parameterType="memberDTO">
		<![CDATA[
			UPDATE member SET pwd=#{pwd}, name=#{name}, tel=#{tel}, address=#{address}, birth=#{birth} where email=#{email};
		]]>
	</update>
	<!-- 회원정보삭제 -->
	<delete id="delMember" parameterType="String">
		<![CDATA[
			DELETE FROM member WHERE email=#{email};
		]]>
	</delete>
    
    
    
    
    
    
 </mapper>